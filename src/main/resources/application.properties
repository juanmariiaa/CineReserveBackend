spring.application.name=Backend

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/cinemadb
spring.datasource.username=root
spring.datasource.password=root

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT Properties
jwt.secret=Qf9PFc7nrEkr4jIMvuY5Die6UvCkfetQ2rnY9AeMOUU=
jwt.expiration=86400000

# Other Configuration
tmdb.api.key=${TMDB_API_KEY}
server.port=8080

# Log SQL queries
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# Configure batching for improved performance
spring.jpa.properties.hibernate.jdbc.batch_size=30
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Use the default batch fetch size to address N+1 problems
spring.jpa.properties.hibernate.default_batch_fetch_size=25

# Google OAuth2 Configuration
google.client.id=${GOOGLE_CLIENT_ID}

# Stripe Configuration
stripe.api.key=${STRIPE_API_KEY}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}
stripe.product.id=${STRIPE_PRODUCT_ID}
stripe.price.id=${STRIPE_PRICE_ID}
stripe.seat.price=10.00

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.connectiontimeout=5000
