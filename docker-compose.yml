version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cinereserve-api
    restart: always
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      # Variables de entorno que se utilizan en application.properties
      - TMDB_API_KEY=${TMDB_API_KEY}
      - STRIPE_API_KEY=${STRIPE_API_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_PRODUCT_ID=${STRIPE_PRODUCT_ID}
      - STRIPE_PRICE_ID=${STRIPE_PRICE_ID}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      # Lo m치s importante: ajustar la URL de la base de datos para que funcione con Docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/cinemadb
      # Estas no son necesarias si ya est치n en application.properties y no cambias los valores
      # - SPRING_DATASOURCE_USERNAME=root
      # - SPRING_DATASOURCE_PASSWORD=root
    volumes:
      - cinereserve-logs:/app/logs
    depends_on:
      - db
    networks:
      - cinereserve-network

  db:
    image: postgres:16-alpine  # Versi칩n m치s actual y ligera
    container_name: cinereserve-db
    restart: always
    environment:
      - POSTGRES_DB=cinemadb
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    ports:
      - "5432:5432"  # Mapeo del puerto (puedes cambiar el puerto externo si es necesario)
    volumes:
      - postgres-data:/var/lib/postgresql/data  # Almacenamiento persistente
    networks:
      - cinereserve-network

volumes:
  cinereserve-logs:
  postgres-data:

networks:
  cinereserve-network:
    driver: bridge